è
\C:\Users\Hernan\source\repos\Practica2LinqClass\Practica2LinqClass\App_Start\BundleConfig.cs
	namespace 	
Practica2LinqClass
 
{ 
public 

class 
BundleConfig 
{ 
public		 
static		 
void		 
RegisterBundles		 *
(		* +
BundleCollection		+ ;
bundles		< C
)		C D
{

 	
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) ;
); <
.< =
Include= D
(D E
$str 7
)7 8
)8 9
;9 :
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) >
)> ?
.? @
Include@ G
(G H
$str 4
)4 5
)5 6
;6 7
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) >
)> ?
.? @
Include@ G
(G H
$str /
)/ 0
)0 1
;1 2
bundles 
. 
Add 
( 
new 
ScriptBundle (
(( )
$str) >
)> ?
.? @
Include@ G
(G H
$str .
,. /
$str ,
), -
)- .
;. /
bundles 
. 
Add 
( 
new 
StyleBundle '
(' (
$str( 7
)7 8
.8 9
Include9 @
(@ A
$str /
,/ 0
$str *
)* +
)+ ,
;, -
} 	
} 
} ‘
\C:\Users\Hernan\source\repos\Practica2LinqClass\Practica2LinqClass\App_Start\FilterConfig.cs
	namespace 	
Practica2LinqClass
 
{ 
public 

class 
FilterConfig 
{ 
public 
static 
void !
RegisterGlobalFilters 0
(0 1"
GlobalFilterCollection1 G
filtersH O
)O P
{		 	
filters

 
.

 
Add

 
(

 
new

  
HandleErrorAttribute

 0
(

0 1
)

1 2
)

2 3
;

3 4
} 	
} 
} ï
[C:\Users\Hernan\source\repos\Practica2LinqClass\Practica2LinqClass\App_Start\RouteConfig.cs
	namespace 	
Practica2LinqClass
 
{		 
public

 

class

 
RouteConfig

 
{ 
public 
static 
void 
RegisterRoutes )
() *
RouteCollection* 9
routes: @
)@ A
{ 	
routes 
. 
IgnoreRoute 
( 
$str ;
); <
;< =
routes 
. 
MapRoute 
( 
name 
: 
$str 
,  
url 
: 
$str 1
,1 2
defaults 
: 
new 
{ 

controller  *
=+ ,
$str- 3
,3 4
action5 ;
=< =
$str> E
,E F
idG I
=J K
UrlParameterL X
.X Y
OptionalY a
}b c
) 
; 
} 	
} 
} ë 
`C:\Users\Hernan\source\repos\Practica2LinqClass\Practica2LinqClass\Controllers\AreaController.cs
	namespace 	
Practica2LinqClass
 
. 
Controllers (
{		 
public

 

class

 
AreaController

 
:

  !

Controller

" ,
{ 

areaModels 
models 
= 
new 

areaModels  *
(* +
)+ ,
;, -
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
models 
. 

listaAreas )
() *
)* +
)+ ,
;, -
} 	
public 
ActionResult 

buscarArea &
(& '
int' *
id+ -
)- .
{ 	
var 
area 
= 
models 
. 

buscarArea (
(( )
id) +
)+ ,
;, -
return 
View 
( 
area 
) 
; 
} 	
public 
ActionResult 
crear !
(! "
)" #
{ 	
return 
View 
( 
) 
; 
} 	
["" 	
HttpPost""	 
]"" 
[## 	$
ValidateAntiForgeryToken##	 !
]##! "
public$$ 
ActionResult$$ 
crear$$ !
($$! "
area$$" &
a$$' (
)$$( )
{%% 	
try&& 
{'' 
if(( 
((( 
models(( 
.(( 
insertarArea(( '
(((' (
Convert((( /
.((/ 0
ToString((0 8
(((8 9
a((9 :
)((: ;
)((; <
.((< =
Equals((= C
(((C D
$str((D H
)((H I
)((I J
{)) 
return** 
RedirectToAction** +
(**+ ,
$str**, 3
)**3 4
;**4 5
}++ 
{,, 
return-- 
RedirectToAction-- +
(--+ ,
$str--, 4
)--4 5
;--5 6
}.. 
}// 
catch00 
(00 
	Exception00 
e00 
)00 
{11 
return22 
View22 
(22 
)22 
;22 
}33 
}55 	
public88 
ActionResult88 

editarArea88 &
(88& '
int88' *
id88+ -
)88- .
{99 	
var:: 
area:: 
=:: 
models:: 
.:: 

buscarArea:: (
(::( )
id::) +
)::+ ,
;::, -
return;; 
View;; 
(;; 
area;; 
);; 
;;; 
}<< 	
[>> 	
HttpPost>>	 
]>> 
[?? 	$
ValidateAntiForgeryToken??	 !
]??! "
public@@ 
ActionResult@@ 
creditarAreaear@@ +
(@@+ ,
int@@, /
condArea@@0 8
,@@8 9
area@@9 =
a@@> ?
)@@? @
{AA 	
tryBB 
{CC 
ifDD 
(DD 
modelsDD 
.DD 
insertarAreaDD '
(DD' (
ConvertDD( /
.DD/ 0
ToStringDD0 8
(DD8 9
aDD9 :
)DD: ;
)DD; <
.DD< =
EqualsDD= C
(DDC D
$strDDD H
)DDH I
)DDI J
{EE 
returnFF 
RedirectToActionFF +
(FF+ ,
$strFF, 3
)FF3 4
;FF4 5
}GG 
{HH 
returnII 
RedirectToActionII +
(II+ ,
$strII, 4
)II4 5
;II5 6
}JJ 
}KK 
catchLL 
(LL 
	ExceptionLL 
eLL 
)LL 
{MM 
returnNN 
ViewNN 
(NN 
)NN 
;NN 
}OO 
}QQ 	
}RR 
}SS ¥	
`C:\Users\Hernan\source\repos\Practica2LinqClass\Practica2LinqClass\Controllers\HomeController.cs
	namespace 	
Practica2LinqClass
 
. 
Controllers (
{ 
public		 

class		 
HomeController		 
:		  !

Controller		" ,
{

 
public 
ActionResult 
Index !
(! "
)" #
{ 	
return 
View 
( 
) 
; 
} 	
public 
ActionResult 
About !
(! "
)" #
{ 	
ViewBag 
. 
Message 
= 
$str B
;B C
return 
View 
( 
) 
; 
} 	
public 
ActionResult 
Contact #
(# $
)$ %
{ 	
ViewBag 
. 
Message 
= 
$str 2
;2 3
return 
View 
( 
) 
; 
} 	
} 
} ‚	
QC:\Users\Hernan\source\repos\Practica2LinqClass\Practica2LinqClass\Global.asax.cs
	namespace 	
Practica2LinqClass
 
{ 
public 

class 
MvcApplication 
:  !
System" (
.( )
Web) ,
., -
HttpApplication- <
{ 
	protected 
void 
Application_Start (
(( )
)) *
{ 	
AreaRegistration 
. 
RegisterAllAreas -
(- .
). /
;/ 0
FilterConfig 
. !
RegisterGlobalFilters .
(. /
GlobalFilters/ <
.< =
Filters= D
)D E
;E F
RouteConfig 
. 
RegisterRoutes &
(& '

RouteTable' 1
.1 2
Routes2 8
)8 9
;9 :
BundleConfig 
. 
RegisterBundles (
(( )
BundleTable) 4
.4 5
Bundles5 <
)< =
;= >
} 	
} 
} ˆ+
WC:\Users\Hernan\source\repos\Practica2LinqClass\Practica2LinqClass\Models\areaModels.cs
	namespace 	
Practica2LinqClass
 
. 
Models #
{ 
public 

class 

areaModels 
{		 "
DataEmpresaDataContext

 
dataEmpr

 '
=

( )
new

* -"
DataEmpresaDataContext

. D
(

D E
)

E F
;

F G
public 
List 
< 
area 
> 

listaAreas $
($ %
)% &
{ 	
List 
< 
area 
> 
lista 
= 
new "
List# '
<' (
area( ,
>, -
(- .
). /
;/ 0
var 
query 
= 
dataEmpr  
.  !

ListarArea! +
(+ ,
), -
;- .
foreach 
( 
var 
items 
in !
query" '
)' (
{ 
area 
a 
= 
new 
area !
(! "
)" #
;# $
a 
. 
areaCod 
= 
items !
.! "
areaCod" )
;) *
a 
. 
areaDes 
= 
items !
.! "
areaDes" )
;) *
lista 
. 
Add 
( 
a 
) 
; 
} 
return 
lista 
; 
} 	
public 
area 

buscarArea 
( 
int "
codArea# *
)* +
{ 	
area 
a 
= 
new 
area 
( 
) 
;  
try   
{!! 
var"" 

reultQuery"" 
=""  
dataEmpr""! )
."") *

BuscarArea""* 4
(""4 5
codArea""5 <
)""< =
;""= >
foreach## 
(## 
var## 
item## !
in##" $

reultQuery##% /
)##/ 0
{$$ 
a%% 
.%% 
areaDes%% 
=%% 
item%%  $
.%%$ %
areaDes%%% ,
;%%, -
}&& 
}'' 
catch'' 
('' 
	Exception'' 
e'' 
)'' 
{(( 
}** 
return++ 
a++ 
;++ 
},, 	
public.. 
string.. 
insertarArea.. "
(.." #
string..# )
valor..* /
)../ 0
{// 	
area00 
a00 
=00 
new00 
area00 
(00 
)00 
;00  
string11 
	resultado11 
=11 
string11 %
.11% &
Empty11& +
;11+ ,
try22 
{33 
dataEmpr44 
.44 
	CrearArea44 "
(44" #
valor44# (
)44( )
;44) *
	resultado55 
=55 
$str55  
;55  !
}66 
catch77 
(77 
	Exception77 
e77 
)77 
{88 
	resultado99 
=99 
e99 
.99 
Message99 %
;99% &
}:: 
return;; 
	resultado;; 
;;; 
}<< 	
public>> 
string>> 
actualizarArea>> $
(>>$ %
int>>% (
condArea>>) 1
,>>1 2
string>>3 9
valor>>: ?
)>>? @
{?? 	
area@@ 
a@@ 
=@@ 
new@@ 
area@@ 
(@@ 
)@@ 
;@@  
stringCC 
	resultadoCC 
=CC 
stringCC %
.CC% &
EmptyCC& +
;CC+ ,
tryDD 
{EE 
dataEmprFF 
.FF 
ActulaizarAreaFF '
(FF' (
condAreaFF( 0
,FF0 1
valorFF2 7
)FF7 8
;FF8 9
	resultadoGG 
=GG 
$strGG  
;GG  !
}HH 
catchII 
(II 
	ExceptionII 
eII 
)II 
{JJ 
	resultadoKK 
=KK 
eKK 
.KK 
MessageKK %
;KK% &
}LL 
returnMM 
	resultadoMM 
;MM 
}NN 	
publicPP 
stringPP 
eliminarAreaPP "
(PP" #
intPP# &
codAreaPP' .
)PP. /
{QQ 	
stringRR 
	resultadoRR 
=RR 
stringRR %
.RR% &
EmptyRR& +
;RR+ ,
trySS 
{TT 
dataEmprUU 
.UU 
EliminarAreaUU %
(UU% &
codAreaUU& -
)UU- .
;UU. /
	resultadoVV 
=VV 
$strVV  
;VV  !
}WW 
catchXX 
(XX 
	ExceptionXX 
eXX 
)XX 
{YY 
	resultado[[ 
=[[ 
e[[ 
.[[ 
Message[[ %
;[[% &
}\\ 
return]] 
	resultado]] 
;]] 
}^^ 	
}__ 
}`` ˆ
]C:\Users\Hernan\source\repos\Practica2LinqClass\Practica2LinqClass\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str -
)- .
]. /
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str /
)/ 0
]0 1
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
["" 
assembly"" 	
:""	 

AssemblyVersion"" 
("" 
$str"" $
)""$ %
]""% &
[## 
assembly## 	
:##	 

AssemblyFileVersion## 
(## 
$str## (
)##( )
]##) *